// Autogenerated with obj_to_js.py from ../assignment-8/doors.obj at 2023-12-09 22:35:29.057399 by rochelleli
// See https://github.com/elbrandt/ObjToJs for more info

// unique vertex positions  : 72
// unique vertex normals    : 6
// unique vertex tex coords : 48
// total vertices           : 168
// total normals            : 168
// total tex coords         : 168
// triangles                : 136
// bb_min                   : [1.695235, 0.187289, -0.960224]
// bb_max                   : [3.615108, 4.046684, 0.379471]

// triangleIndices type     : Uint8Array
// the object
var doors = new Object();

// aligned bounding box extents
doors.bboxMin = new Float32Array([1.695235, 0.187289, -0.960224]);
doors.bboxMax = new Float32Array([3.615108, 4.046684, 0.379471]);

// element index array
doors.triangleIndices = new Uint8Array([0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23, 24, 25, 21, 24, 21, 20, 26, 27, 28, 26, 28, 29, 30, 12, 15, 30, 15, 31, 32, 33, 34, 32, 34, 35, 36, 30, 31, 36, 31, 37, 38, 39, 25, 38, 25, 24, 29, 28, 17, 29, 17, 16, 33, 4, 7, 33, 7, 34, 40, 41, 42, 40, 42, 43, 44, 45, 30, 44, 30, 36, 46, 47, 33, 46, 33, 32, 45, 48, 12, 45, 12, 30, 48, 49, 13, 48, 13, 12, 50, 51, 9, 50, 9, 8, 52, 53, 5, 52, 5, 4, 54, 55, 1, 54, 1, 0, 56, 57, 55, 56, 55, 54, 58, 59, 53, 58, 53, 52, 60, 61, 51, 60, 51, 50, 62, 63, 49, 62, 49, 48, 64, 62, 48, 64, 48, 45, 65, 66, 47, 65, 47, 46, 67, 64, 45, 67, 45, 44, 66, 58, 52, 66, 52, 47, 68, 69, 70, 68, 70, 71, 72, 73, 74, 72, 74, 75, 76, 77, 78, 76, 78, 79, 80, 81, 82, 80, 82, 83, 84, 85, 86, 84, 86, 87, 88, 89, 90, 88, 90, 91, 92, 93, 94, 92, 94, 95, 96, 97, 98, 96, 98, 99, 100, 101, 102, 100, 102, 103, 104, 105, 106, 104, 106, 107, 108, 109, 105, 108, 105, 104, 110, 111, 112, 110, 112, 113, 114, 96, 99, 114, 99, 115, 116, 117, 118, 116, 118, 119, 120, 114, 115, 120, 115, 121, 122, 123, 109, 122, 109, 108, 113, 112, 101, 113, 101, 100, 117, 88, 91, 117, 91, 118, 124, 125, 126, 124, 126, 127, 128, 129, 114, 128, 114, 120, 130, 131, 117, 130, 117, 116, 129, 132, 96, 129, 96, 114, 132, 133, 97, 132, 97, 96, 134, 135, 93, 134, 93, 92, 136, 137, 89, 136, 89, 88, 138, 139, 85, 138, 85, 84, 140, 141, 139, 140, 139, 138, 142, 143, 137, 142, 137, 136, 144, 145, 135, 144, 135, 134, 146, 147, 133, 146, 133, 132, 148, 146, 132, 148, 132, 129, 149, 150, 131, 149, 131, 130, 151, 148, 129, 151, 129, 128, 150, 142, 136, 150, 136, 131, 152, 153, 154, 152, 154, 155, 156, 157, 158, 156, 158, 159, 160, 161, 162, 160, 162, 163, 164, 165, 166, 164, 166, 167]);

// vertex positions
doors.vertexPos = new Float32Array([ 1.695235, 3.985383, 0.379471, 1.749705, 3.985383, 0.379471, 1.749705, 4.046684, 0.379471, 1.695235, 4.046684, 0.379471, 1.749705, 3.985383, -0.258983, 1.749705, 3.985383, -0.336247, 1.749705, 4.046684, -0.336247, 1.749705, 4.046684, -0.258983, 1.749705, 3.985383, -0.336247, 1.695235, 3.985383, -0.336247, 1.695235, 4.046684, -0.336247, 1.749705, 4.046684, -0.336247, 1.695235, 3.985383, 0.317362, 1.695235, 3.985383, 0.379471, 1.695235, 4.046684, 0.379471, 1.695235, 4.046684, 0.317362, 1.749705, 2.689347, -0.258983, 1.695235, 2.689347, -0.258983, 1.695235, 2.689347, -0.336247, 1.749705, 2.689347, -0.336247, 1.749705, 4.046684, 0.317362, 1.695235, 4.046684, 0.317362, 1.695235, 4.046684, 0.379471, 1.749705, 4.046684, 0.379471, 1.749705, 4.046684, -0.258983, 1.695235, 4.046684, -0.258983, 1.749705, 2.689347, 0.379471, 1.695235, 2.689347, 0.379471, 1.695235, 2.689347, 0.317362, 1.749705, 2.689347, 0.317362, 1.695235, 3.985383, -0.258983, 1.695235, 4.046684, -0.258983, 1.749705, 3.985383, 0.379471, 1.749705, 3.985383, 0.317362, 1.749705, 4.046684, 0.317362, 1.749705, 4.046684, 0.379471, 1.695235, 3.985383, -0.336247, 1.695235, 4.046684, -0.336247, 1.749705, 4.046684, -0.336247, 1.695235, 4.046684, -0.336247, 1.749705, 3.985383, -0.258983, 1.702737, 3.985383, -0.258983, 1.702737, 3.524806, -0.258983, 1.749705, 3.524806, -0.258983, 1.695235, 3.524806, -0.336247, 1.695235, 3.524806, -0.258983, 1.749705, 3.524806, 0.379471, 1.749705, 3.524806, 0.317362, 1.695235, 3.524806, 0.317362, 1.695235, 3.524806, 0.379471, 1.749705, 3.524806, -0.336247, 1.695235, 3.524806, -0.336247, 1.749705, 3.524806, -0.258983, 1.749705, 3.524806, -0.336247, 1.695235, 3.524806, 0.379471, 1.749705, 3.524806, 0.379471, 1.695235, 2.689347, 0.379471, 1.749705, 2.689347, 0.379471, 1.749705, 2.689347, -0.258983, 1.749705, 2.689347, -0.336247, 1.749705, 2.689347, -0.336247, 1.695235, 2.689347, -0.336247, 1.695235, 2.689347, 0.317362, 1.695235, 2.689347, 0.379471, 1.695235, 2.689347, -0.258983, 1.749705, 2.689347, 0.379471, 1.749705, 2.689347, 0.317362, 1.695235, 2.689347, -0.336247, 1.702737, 3.524806, 0.317362, 1.702737, 3.524806, -0.258983, 1.702737, 3.985383, -0.258983, 1.702737, 3.985383, 0.317362, 1.749705, 3.524806, 0.317362, 1.702737, 3.524806, 0.317362, 1.702737, 3.985383, 0.317362, 1.749705, 3.985383, 0.317362, 1.749705, 3.524806, -0.258983, 1.702737, 3.524806, -0.258983, 1.702737, 3.524806, 0.317362, 1.749705, 3.524806, 0.317362, 1.749705, 3.985383, 0.317362, 1.702737, 3.985383, 0.317362, 1.702737, 3.985383, -0.258983, 1.749705, 3.985383, -0.258983, 3.615108, 1.483325, -0.905753, 3.615108, 1.483325, -0.960224, 3.615108, 1.544626, -0.960224, 3.615108, 1.544626, -0.905753, 2.976655, 1.483325, -0.960224, 2.899391, 1.483325, -0.960224, 2.899391, 1.544626, -0.960224, 2.976655, 1.544626, -0.960224, 2.899391, 1.483325, -0.960224, 2.899391, 1.483325, -0.905753, 2.899391, 1.544626, -0.905753, 2.899391, 1.544626, -0.960224, 3.552999, 1.483325, -0.905753, 3.615108, 1.483325, -0.905753, 3.615108, 1.544626, -0.905753, 3.552999, 1.544626, -0.905753, 2.976655, 0.187289, -0.960224, 2.976655, 0.187289, -0.905753, 2.899391, 0.187289, -0.905753, 2.899391, 0.187289, -0.960224, 3.552999, 1.544626, -0.960224, 3.552999, 1.544626, -0.905753, 3.615108, 1.544626, -0.905753, 3.615108, 1.544626, -0.960224, 2.976655, 1.544626, -0.960224, 2.976655, 1.544626, -0.905753, 3.615108, 0.187289, -0.960224, 3.615108, 0.187289, -0.905753, 3.552999, 0.187289, -0.905753, 3.552999, 0.187289, -0.960224, 2.976655, 1.483325, -0.905753, 2.976655, 1.544626, -0.905753, 3.615108, 1.483325, -0.960224, 3.552999, 1.483325, -0.960224, 3.552999, 1.544626, -0.960224, 3.615108, 1.544626, -0.960224, 2.899391, 1.483325, -0.905753, 2.899391, 1.544626, -0.905753, 2.899391, 1.544626, -0.960224, 2.899391, 1.544626, -0.905753, 2.976655, 1.483325, -0.960224, 2.976655, 1.483325, -0.913256, 2.976655, 1.022748, -0.913256, 2.976655, 1.022748, -0.960224, 2.899391, 1.022748, -0.905753, 2.976655, 1.022748, -0.905753, 3.615108, 1.022748, -0.960224, 3.552999, 1.022748, -0.960224, 3.552999, 1.022748, -0.905753, 3.615108, 1.022748, -0.905753, 2.899391, 1.022748, -0.960224, 2.899391, 1.022748, -0.905753, 2.976655, 1.022748, -0.960224, 2.899391, 1.022748, -0.960224, 3.615108, 1.022748, -0.905753, 3.615108, 1.022748, -0.960224, 3.615108, 0.187289, -0.905753, 3.615108, 0.187289, -0.960224, 2.976655, 0.187289, -0.960224, 2.899391, 0.187289, -0.960224, 2.899391, 0.187289, -0.960224, 2.899391, 0.187289, -0.905753, 3.552999, 0.187289, -0.905753, 3.615108, 0.187289, -0.905753, 2.976655, 0.187289, -0.905753, 3.615108, 0.187289, -0.960224, 3.552999, 0.187289, -0.960224, 2.899391, 0.187289, -0.905753, 3.552999, 1.022748, -0.913256, 2.976655, 1.022748, -0.913256, 2.976655, 1.483325, -0.913256, 3.552999, 1.483325, -0.913256, 3.552999, 1.022748, -0.960224, 3.552999, 1.022748, -0.913256, 3.552999, 1.483325, -0.913256, 3.552999, 1.483325, -0.960224, 2.976655, 1.022748, -0.960224, 2.976655, 1.022748, -0.913256, 3.552999, 1.022748, -0.913256, 3.552999, 1.022748, -0.960224, 3.552999, 1.483325, -0.960224, 3.552999, 1.483325, -0.913256, 2.976655, 1.483325, -0.913256, 2.976655, 1.483325, -0.960224]);

// vertex normals
doors.vertexNormals = new Float32Array([ -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, -1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, 1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, 1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0, -0.0, -1.0, -0.0]);

// vertex texture coordinates
doors.vertexTextureCoords = new Float32Array([ 0.613709, 0.0, 0.613709, 0.25, 0.625, 0.25, 0.625, 0.0, 0.613709, 0.473012, 0.613709, 0.5, 0.625, 0.5, 0.625, 0.473012, 0.613709, 0.5, 0.613709, 0.75, 0.625, 0.75, 0.625, 0.5, 0.613709, 0.978305, 0.613709, 1.0, 0.625, 1.0, 0.625, 0.978305, 0.348012, 0.5, 0.348012, 0.75, 0.375, 0.75, 0.375, 0.5, 0.853305, 0.5, 0.853305, 0.75, 0.875, 0.75, 0.875, 0.5, 0.651988, 0.5, 0.651988, 0.75, 0.125, 0.5, 0.125, 0.75, 0.146695, 0.75, 0.146695, 0.5, 0.613709, 0.776988, 0.625, 0.776988, 0.613709, 0.25, 0.613709, 0.271695, 0.625, 0.271695, 0.625, 0.25, 0.613709, 0.75, 0.625, 0.75, 0.625, 0.5, 0.625, 0.75, 0.613709, 0.473012, 0.613709, 0.473012, 0.528878, 0.473012, 0.528878, 0.473012, 0.528878, 0.75, 0.528878, 0.776988, 0.528878, 0.25, 0.528878, 0.271695, 0.528878, 0.978305, 0.528878, 1.0, 0.528878, 0.5, 0.528878, 0.75, 0.528878, 0.473012, 0.528878, 0.5, 0.528878, 0.0, 0.528878, 0.25, 0.375, 0.0, 0.375, 0.25, 0.375, 0.473012, 0.375, 0.5, 0.375, 0.5, 0.375, 0.75, 0.375, 0.978305, 0.375, 1.0, 0.375, 0.776988, 0.375, 0.25, 0.375, 0.271695, 0.375, 0.75, 0.528878, 0.271695, 0.528878, 0.473012, 0.613709, 0.473012, 0.613709, 0.271695, 0.528878, 0.271695, 0.528878, 0.271695, 0.613709, 0.271695, 0.613709, 0.271695, 0.528878, 0.473012, 0.528878, 0.473012, 0.528878, 0.271695, 0.528878, 0.271695, 0.613709, 0.271695, 0.613709, 0.271695, 0.613709, 0.473012, 0.613709, 0.473012, 0.613709, 0.0, 0.613709, 0.25, 0.625, 0.25, 0.625, 0.0, 0.613709, 0.473012, 0.613709, 0.5, 0.625, 0.5, 0.625, 0.473012, 0.613709, 0.5, 0.613709, 0.75, 0.625, 0.75, 0.625, 0.5, 0.613709, 0.978305, 0.613709, 1.0, 0.625, 1.0, 0.625, 0.978305, 0.348012, 0.5, 0.348012, 0.75, 0.375, 0.75, 0.375, 0.5, 0.853305, 0.5, 0.853305, 0.75, 0.875, 0.75, 0.875, 0.5, 0.651988, 0.5, 0.651988, 0.75, 0.125, 0.5, 0.125, 0.75, 0.146695, 0.75, 0.146695, 0.5, 0.613709, 0.776988, 0.625, 0.776988, 0.613709, 0.25, 0.613709, 0.271695, 0.625, 0.271695, 0.625, 0.25, 0.613709, 0.75, 0.625, 0.75, 0.625, 0.5, 0.625, 0.75, 0.613709, 0.473012, 0.613709, 0.473012, 0.528878, 0.473012, 0.528878, 0.473012, 0.528878, 0.75, 0.528878, 0.776988, 0.528878, 0.25, 0.528878, 0.271695, 0.528878, 0.978305, 0.528878, 1.0, 0.528878, 0.5, 0.528878, 0.75, 0.528878, 0.473012, 0.528878, 0.5, 0.528878, 0.0, 0.528878, 0.25, 0.375, 0.0, 0.375, 0.25, 0.375, 0.473012, 0.375, 0.5, 0.375, 0.5, 0.375, 0.75, 0.375, 0.978305, 0.375, 1.0, 0.375, 0.776988, 0.375, 0.25, 0.375, 0.271695, 0.375, 0.75, 0.528878, 0.271695, 0.528878, 0.473012, 0.613709, 0.473012, 0.613709, 0.271695, 0.528878, 0.271695, 0.528878, 0.271695, 0.613709, 0.271695, 0.613709, 0.271695, 0.528878, 0.473012, 0.528878, 0.473012, 0.528878, 0.271695, 0.528878, 0.271695, 0.613709, 0.271695, 0.613709, 0.271695, 0.613709, 0.473012, 0.613709, 0.473012]);

