/* ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ Constants ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ */
const canvas = document.querySelector("#mainc");
const context = canvas.getContext("2d");
const map_img = document.querySelector("img");

/* ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ glmatrix wrappers ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ */
let transform_stack = [mat3.create()];

function save() {
    transform_stack.unshift(mat3.clone(transform_stack[0]));
}

function restore() {
    transform_stack.shift();
}

function translate(a, b) {
    mat3.translate(transform_stack[0], transform_stack[0], [a, b]);
}

function rotate(a) {
    mat3.rotate(transform_stack[0], transform_stack[0], a);
}

function scale(a, b) {
    mat3.scale(transform_stack[0], transform_stack[0], [a, b]);
}

function moveTo(x, y) {
    let res = vec2.create();
    let loc = [x, y];
    vec2.transformMat3(res, loc, transform_stack[0]);
    context.moveTo(res[0], res[1]);
}

function lineTo(x, y) {
    let res = vec2.create();
    let loc = [x, y];
    vec2.transformMat3(res, loc, transform_stack[0]);
    context.lineTo(res[0], res[1]);
}


/* ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ General-purpose ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ */
function axes(color) {
    context.strokeStyle=color;
    context.beginPath();
    // Axes
    moveTo(120,0);lineTo(0,0);lineTo(0,120);
    // Arrowheads
    moveTo(110,5);lineTo(120,0);lineTo(110,-5);
    moveTo(5,110);lineTo(0,120);lineTo(-5,110);
    // X-label
    moveTo(130,-5);lineTo(140,5);
    moveTo(130,5);lineTo(140,-5);
    // Y-label
    moveTo(-5,130);lineTo(0,135);lineTo(5,130);
    moveTo(0,135);lineTo(0,142);

    context.stroke();
}

function wheel() {
    context.strokeStyle = "black";
    context.beginPath();
    context.arc(0, 0, 20, 0, Math.PI * 20);
    context.stroke();
    context.beginPath();
    context.arc(0, 0, 2, 0, Math.PI * 20);
    context.fill();


    // spokes

    context.beginPath();
    context.moveTo(0, 20);
    context.lineTo(0, -20);
    context.stroke();

    context.beginPath();
    context.moveTo(20, 0);
    context.lineTo(-20, 0);
    context.stroke();


    context.save();
    {
        context.rotate(Math.PI * .25);

        context.beginPath();
        context.moveTo(0, 20);
        context.lineTo(0, -20);
        context.stroke();

        context.beginPath();
        context.moveTo(20, 0);
        context.lineTo(-20, 0);
        context.stroke();
    }
    context.restore();

}

let wheel_rot = 0;

function bycicle() {
    context.translate(-60, 0);

    // wheels

    context.save();
    {
        context.translate(20, 20);
        context.rotate(wheel_rot);
        wheel();
    }
    context.restore();

    context.save();
    {
        context.translate(100, 20);
        context.rotate(wheel_rot);
        wheel();
    }
    context.restore();

    context.lineWidth = 3;

    context.strokeStyle = "red";
    context.beginPath();
    context.moveTo(20, 20);
    context.lineTo(60, 20);
    context.stroke();

    context.beginPath();
    context.moveTo(20, 20);
    context.lineTo(50, 50);
    context.stroke();

    context.beginPath();
    context.moveTo(60, 20);
    context.lineTo(50, 50);
    context.stroke();

    context.beginPath();
    context.moveTo(58, 30);
    context.lineTo(85, 50);
    context.stroke();

    context.beginPath();
    context.moveTo(100, 20);
    context.lineTo(85, 50);
    context.stroke();

    context.beginPath();
    context.moveTo(50, 50);
    context.lineTo(85, 50);
    context.stroke();

    context.beginPath();
    context.moveTo(85, 50);
    context.lineTo(90, 60);
    context.stroke();

    context.beginPath();
    context.moveTo(50, 50);
    context.lineTo(47, 55);
    context.stroke();

    context.fillStyle = "red";
    context.beginPath();
    context.arc(60, 20, 2, 0, 2 * Math.PI);
    context.fill();

    context.strokeStyle = "black";
    context.beginPath();
    context.moveTo(52, 55);
    context.lineTo(42, 55);
    context.stroke();

    context.beginPath();
    context.moveTo(96, 58);
    context.lineTo(85, 63);
    context.stroke();
}

let bt = 0; // bycicle time

function update() {
    canvas.width = canvas.width;

    context.drawImage(map_img, 0, 0, 1200, 600);

    context.lineWidth = 5;
    context.strokeStyle = "blue";
    draw_multi_bspline(path);

    if(path.length >= 4) {
        if(bt >= path.length - 3) bt = 0;

        let i = Math.floor(bt);
        let value = cubic(bspline, [path[i], path[i + 1], path[i + 2], path[i + 3]], bt - i);
        let deriv = cubic(d_bspline, [path[i], path[i + 1], path[i + 2], path[i + 3]], bt - i);
        let d_mag = Math.sqrt(deriv[0] * deriv[0] + deriv[1] * deriv[1]);

        if(ns.checked) {
            wheel_rot -= 0.1;
            bt += 3 / d_mag;
        } else {
            wheel_rot -= 0.003 * d_mag;
            bt += 0.1;
        }

        context.lineWidth = 1;
        context.translate(value[0], value[1]);
        let theta = Math.atan2(deriv[1], deriv[0]);
        let flip_mul = 1;
        if(fo.checked) {
            if(theta < -Math.PI / 2 || theta > Math.PI / 2) {
                flip_mul *= -1;
            }
        }
        context.rotate(Math.PI + theta);
        context.scale(-0.5, 0.5 * flip_mul);
        bycicle();
    }

    window.requestAnimationFrame(update);
}

window.onload = function() { update(); };

/* ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ wip ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ */

let pts = [
 [3, 142], [11, 141], [15, 142], [22, 143], [33, 145],
 [36, 145], [40, 143], [43, 143], [47, 144], [55, 143],
 [61, 142], [64, 141], [67, 141], [69, 142], [74, 143],
 [79, 142], [83, 142], [85, 142], [88, 142], [91, 141],
 [98, 140], [101, 141], [103, 142], [106, 143], [109, 143],
 [113, 143], [115, 143], [119, 143], [122, 144], [128, 144],
 [130, 144], [134, 144], [136, 145], [138, 145], [141, 145],
 [145, 144], [149, 143], [152, 143], [154, 144], [156, 145],
 [161, 145], [168, 144], [171, 144], [173, 144], [177, 144],
 [182, 144], [186, 144], [190, 144], [193, 145], [196, 145],
 [199, 145], [201, 145], [203, 145], [206, 144], [208, 144],
 [211, 145], [213, 146], [216, 145], [222, 145], [234, 144],
 [240, 144], [245, 145], [250, 144], [255, 144], [261, 145],
 [265, 145], [271, 146], [278, 146], [285, 146], [293, 146],
 [299, 145], [303, 145], [307, 145], [315, 145], [321, 145],
 [324, 145], [228, 144], [331, 145], [335, 145], [339, 145],
 [344, 145], [348, 145], [352, 144], [355, 143], [357, 143],
 [360, 144], [364, 144], [367, 146], [370, 145], [374, 144],
 [377, 144], [379, 145], [381, 146], [383, 146], [386, 146],
 [388, 146], [393, 145], [395, 145], [397, 145], [401, 146],
 [405, 146], [407, 146], [410, 146], [412, 147], [414, 147],
 [417, 147], [423, 147], [426, 148], [429, 148], [436, 146],
 [440, 144], [444, 143], [448, 144], [451, 143], [455, 141],
 [462, 139], [466, 138], [468, 138], [470, 137], [474, 136],
 [477, 135], [484, 134], [486, 133], [488, 133], [492, 132],
 [496, 133], [499, 133], [503, 133], [509, 134], [512, 134],
 [516, 136], [520, 137], [525, 138], [531, 140], [536, 141],
 [541, 141], [546, 141], [549, 141], [553, 141], [557, 143],
 [560, 143], [565, 143], [569, 142], [573, 141], [579, 142],
 [582, 141], [585, 139], [588, 138], [591, 138], [596, 137],
 [602, 139], [605, 139], [609, 139], [612, 138], [615, 138],
 [619, 138], [623, 138], [627, 137], [632, 137], [636, 139],
 [641, 140], [645, 141], [652, 141], [655, 143], [657, 145],
 [659, 146], [664, 149], [667, 150], [669, 152], [671, 153],
 [674, 156], [677, 159], [679, 160], [681, 163], [684, 164],
 [687, 165], [690, 165], [694, 166], [697, 167], [699, 168],
 [701, 168], [704, 169], [709, 171], [712, 172], [717, 173],
 [723, 173], [727, 172], [731, 171], [735, 171], [737, 172],
 [741, 172], [744, 173], [748, 174], [750, 174], [754, 175],
 [758, 176], [760, 176], [764, 176], [767, 176], [771, 175],
 [776, 174], [779, 173], [784, 172], [787, 171], [790, 171],
 [795, 169], [802, 166], [805, 164], [809, 161], [811, 159],
 [813, 157], [814, 155], [817, 153], [819, 150], [821, 148],
 [824, 145], [826, 143], [828, 140], [829, 138], [831, 136],
 [832, 134], [834, 133], [836, 132], [838, 134], [840, 137],
 [840, 140], [841, 143], [840, 146], [840, 149], [843, 151],
 [845, 153], [848, 153], [852, 153], [854, 154], [856, 155],
 [859, 156], [861, 156], [870, 156], [871, 156], [873, 156],
 [875, 157], [879, 157], [885, 155], [888, 155], [864, 157],
 [865, 156], [867, 157], [168, 6], [168, 10], [167, 13],
 [166, 16], [165, 20], [164, 23], [164, 26], [166, 30],
 [173, 32], [177, 33], [180, 36], [184, 39], [187, 41],
 [190, 43], [194, 44], [197, 44], [201, 46], [204, 47],
 [191, 51], [192, 55], [194, 58], [192, 61], [191, 65],
 [191, 68], [191, 71], [191, 74], [191, 77], [192, 81],
 [192, 84], [190, 87], [183, 88], [178, 90], [175, 91],
 [172, 90], [168, 90], [165, 90], [161, 90], [158, 89],
 [155, 88], [151, 88], [147, 87], [144, 87], [140, 87],
 [184, 88], [181, 89], [186, 87], [188, 86], [195, 88],
 [197, 91], [197, 95], [199, 98], [201, 101], [202, 105],
 [202, 107], [202, 111], [200, 114], [199, 116], [199, 119],
 [200, 123], [200, 125], [200, 128], [200, 130], [200, 132],
 [292, 49], [290, 52], [291, 55], [293, 58], [294, 62],
 [296, 66], [298, 68], [299, 72], [300, 75], [300, 79],
 [300, 82], [300, 85], [299, 89], [297, 94], [297, 97],
 [298, 101], [299, 104], [299, 107], [300, 111], [300, 114],
 [300, 118], [299, 121], [300, 124], [301, 127], [301, 131],
 [301, 134], [301, 138], [300, 141], [293, 90], [288, 90],
 [286, 90], [283, 90], [280, 91], [277, 88], [277, 85],
 [278, 81], [281, 79], [284, 78], [288, 78], [291, 79],
 [295, 81], [425, 87], [424, 92], [423, 96], [423, 99],
 [424, 102], [425, 106], [425, 109], [425, 113], [424, 116],
 [423, 119], [423, 121], [422, 124], [422, 128], [422, 131],
 [423, 134], [423, 137], [423, 140], [424, 142], [419, 111],
 [416, 113], [415, 116], [415, 119], [417, 122], [420, 123],
 [430, 94], [433, 95], [436, 96], [440, 96], [443, 95],
 [446, 95], [449, 94], [452, 94], [455, 94], [458, 94],
 [462, 94], [466, 93], [469, 92], [471, 91], [473, 89],
 [476, 87], [479, 85], [481, 84], [484, 83], [487, 85],
 [488, 87], [488, 91], [486, 93], [483, 94], [480, 94],
 [477, 94], [473, 94], [484, 100], [484, 96], [368, 69],
 [373, 68], [376, 70], [380, 71], [383, 72], [386, 72],
 [390, 72], [394, 72], [397, 72], [402, 73], [406, 72],
 [409, 72], [412, 72], [415, 73], [419, 73], [204, 149],
 [203, 154], [206, 158], [207, 162], [207, 167], [206, 170],
 [207, 174], [205, 177], [204, 180], [205, 184], [205, 188],
 [204, 191], [204, 193], [295, 188], [291, 191], [287, 192],
 [281, 194], [278, 194], [274, 194], [271, 193], [267, 192],
 [263, 193], [260, 194], [256, 195], [253, 196], [249, 195],
 [245, 193], [242, 193], [239, 193], [235, 193], [230, 195],
 [227, 196], [223, 195], [220, 194], [217, 193], [213, 192],
 [210, 192], [207, 192], [201, 194], [197, 195], [193, 193],
 [188, 192], [183, 193], [178, 194], [174, 195], [172, 190],
 [174, 181], [175, 178], [176, 174], [172, 185], [174, 191],
 [166, 191], [163, 191], [173, 198], [172, 204], [171, 208],
 [171, 212], [172, 215], [183, 205], [183, 209], [183, 212],
 [185, 216], [185, 219], [189, 220], [194, 219], [200, 217],
 [203, 216], [207, 218], [211, 219], [214, 219], [218, 220],
 [222, 220], [225, 220], [228, 220], [232, 220], [235, 219],
 [240, 219], [243, 219], [246, 219], [249, 217], [250, 214],
 [251, 211], [253, 208], [257, 208], [259, 212], [259, 214],
 [256, 216], [252, 216], [254, 204], [254, 201], [262, 213],
 [263, 214], [222, 224], [222, 228], [222, 230], [219, 233],
 [216, 232], [213, 230], [211, 227], [209, 224], [208, 221],
 [183, 221], [185, 225], [185, 229], [184, 232], [184, 235],
 [185, 238], [184, 241], [183, 245], [182, 249], [182, 251],
 [185, 251], [189, 250], [192, 250], [195, 249], [180, 253],
 [177, 254], [226, 237], [227, 240], [228, 244], [231, 247],
 [234, 247], [238, 248], [240, 248], [244, 247], [247, 246],
 [250, 246], [253, 246], [257, 246], [260, 245], [263, 246],
 [266, 246], [222, 235], [219, 232], [300, 148], [298, 154],
 [298, 157], [298, 159], [300, 162], [299, 166], [299, 169],
 [298, 174], [298, 179], [299, 183], [299, 186], [303, 191],
 [305, 193], [307, 196], [310, 200], [312, 203], [314, 206],
 [317, 208], [320, 209], [323, 210], [326, 210], [329, 211],
 [333, 212], [335, 212], [339, 213], [342, 213], [346, 213],
 [350, 213], [354, 213], [357, 213], [361, 213], [364, 213],
 [367, 214], [372, 213], [375, 212], [379, 212], [383, 213],
 [386, 214], [390, 214], [394, 214], [397, 214], [401, 214],
 [405, 214], [408, 214], [411, 215], [414, 215], [417, 215],
 [419, 214], [422, 214], [425, 152], [425, 156], [426, 160],
 [425, 164], [425, 167], [424, 170], [423, 174], [421, 177],
 [422, 181], [423, 185], [423, 189], [424, 192], [423, 195],
 [423, 198], [422, 201], [421, 205], [421, 208], [422, 211],
 [422, 214], [422, 218], [421, 222], [422, 225], [422, 229],
 [422, 234], [421, 237], [422, 241], [421, 245], [422, 248],
 [421, 252], [421, 256], [422, 260], [424, 263], [425, 266],
 [428, 270], [430, 273], [434, 275], [438, 275], [441, 276],
 [444, 278], [447, 280], [451, 282], [454, 284], [458, 287],
 [461, 289], [465, 291], [468, 293], [472, 296], [475, 298],
 [478, 300], [483, 302], [487, 303], [491, 303], [496, 302],
 [500, 304], [504, 304], [507, 304], [510, 305], [513, 306],
 [516, 306], [520, 305], [525, 306], [529, 306], [533, 305],
 [541, 305], [547, 305], [550, 305], [556, 306], [560, 306],
 [564, 306], [568, 306], [571, 305], [576, 305], [581, 307],
 [587, 307], [591, 307], [594, 307], [598, 307], [603, 307],
 [610, 306], [613, 306], [616, 307], [621, 307], [625, 306],
 [629, 307], [633, 308], [637, 309], [640, 309], [644, 307],
 [647, 307], [651, 307], [655, 307], [658, 306], [662, 307],
 [665, 307], [668, 308], [672, 308], [675, 308], [678, 308],
 [681, 308], [684, 308], [687, 307], [690, 307], [692, 307],
 [695, 307], [699, 307], [700, 308], [688, 168], [687, 172],
 [686, 174], [683, 177], [681, 180], [681, 185], [681, 189],
 [679, 193], [678, 196], [676, 200], [676, 203], [677, 207],
 [676, 210], [675, 214], [673, 216], [670, 215], [666, 214],
 [661, 215], [658, 216], [653, 216], [650, 216], [646, 217],
 [641, 217], [638, 215], [634, 214], [630, 215], [627, 216],
 [623, 216], [619, 216], [615, 216], [612, 216], [608, 216],
 [604, 215], [600, 215], [597, 215], [593, 215], [588, 215],
 [585, 214], [581, 214], [578, 214], [574, 215], [570, 214],
 [565, 214], [562, 213], [558, 213], [555, 214], [551, 214],
 [547, 214], [545, 214], [541, 214], [537, 215], [532, 216],
 [529, 217], [525, 216], [521, 215], [518, 214], [514, 214],
 [510, 215], [506, 216], [500, 217], [496, 216], [492, 214],
 [488, 213], [485, 212], [479, 212], [475, 213], [471, 214],
 [467, 214], [462, 214], [458, 213], [454, 212], [887, 117],
 [890, 120], [890, 124], [891, 127], [891, 131], [889, 134],
 [889, 137], [889, 140], [888, 143], [888, 146], [889, 149],
 [890, 152], [889, 155], [882, 155], [879, 158], [889, 159],
 [889, 163], [891, 166], [891, 169], [892, 172], [892, 175],
 [894, 175], [898, 175], [901, 175], [907, 177], [911, 176],
 [914, 176], [917, 175], [920, 174], [924, 175], [927, 177],
 [930, 176], [934, 175], [938, 175], [941, 176], [945, 177],
 [949, 178], [956, 178], [959, 178], [962, 177], [965, 178],
 [968, 178], [971, 178], [975, 179], [979, 179], [982, 179],
 [985, 178], [988, 178], [992, 178], [995, 177], [998, 177],
 [1001, 178], [1004, 178], [1006, 178], [1009, 178], [1012, 179],
 [1016, 177], [1018, 175], [1018, 172], [1017, 169], [1016, 166],
 [1016, 163], [1017, 159], [1018, 156], [1018, 153], [1019, 151],
 [1019, 148], [1018, 145], [1018, 142], [1017, 138], [1017, 179],
 [1016, 182], [1015, 185], [1015, 189], [1016, 192], [1016, 195],
 [1016, 198], [1016, 201], [1017, 204], [1016, 206], [1014, 210],
 [1015, 213], [1016, 216], [1016, 219], [1017, 222], [1017, 224],
 [1017, 227], [1014, 234], [1015, 240], [1014, 242], [1013, 246],
 [1014, 249], [1014, 253], [1013, 256], [1013, 259], [1013, 262],
 [1014, 265], [1014, 268], [1014, 272], [1014, 275], [1014, 279],
 [1014, 282], [1015, 285], [1014, 289], [1014, 292], [1012, 295],
 [1011, 298], [1010, 301], [1011, 304], [1012, 307], [1012, 311],
 [1013, 229], [1012, 234], [1015, 237], [1074, 313], [1071, 312],
 [1067, 312], [1064, 313], [1061, 314], [1057, 314], [1054, 314],
 [1051, 313], [1048, 312], [1044, 311], [1042, 311], [1039, 311],
 [1037, 312], [1033, 312], [1031, 312], [1028, 312], [1025, 312],
 [1021, 311], [1018, 311], [1015, 313], [1012, 314], [1008, 315],
 [1004, 313], [1001, 311], [997, 311], [994, 313], [988, 313],
 [985, 312], [981, 312], [978, 312], [975, 312], [971, 312],
 [967, 313], [963, 312], [960, 311], [957, 311], [953, 312],
 [949, 313], [946, 312], [943, 311], [939, 311], [936, 311],
 [932, 311], [929, 310], [924, 310], [919, 311], [914, 312],
 [910, 312], [906, 312], [903, 312], [900, 312], [898, 311],
 [895, 311], [891, 310], [1012, 320], [1013, 323], [1013, 326],
 [1013, 329], [1012, 332], [1012, 335], [1012, 339], [1012, 341],
 [1012, 345], [1011, 349], [1010, 352], [1010, 356], [1010, 359],
 [1010, 362], [1010, 366], [1010, 368], [1010, 371], [1010, 373],
 [1011, 375], [1014, 375], [1017, 375], [1021, 374], [1024, 374],
 [1029, 374], [1033, 373], [1036, 373], [1039, 374], [1043, 375],
 [1046, 375], [1049, 375], [1052, 375], [1056, 375], [1059, 375],
 [1062, 375], [1066, 375], [1068, 375], [1071, 376], [1071, 373],
 [1072, 370], [1073, 366], [1074, 363], [1074, 360], [1076, 356],
 [1076, 353], [1075, 349], [1073, 346], [1073, 343], [1073, 339],
 [1073, 336], [1073, 333], [1073, 330], [1074, 326], [1075, 323],
 [1075, 320], [1075, 317], [1074, 314], [1073, 311], [1073, 307],
 [1073, 304], [1074, 301], [1074, 298], [1075, 295], [1076, 291],
 [1076, 288], [1076, 285], [1076, 282], [1075, 278], [1076, 275],
 [1077, 272], [1077, 269], [1076, 266], [1076, 263], [1076, 260],
 [1075, 257], [1075, 253], [1075, 250], [1072, 377], [1073, 380],
 [1073, 383], [1073, 386], [1073, 390], [1072, 393], [1072, 396],
 [1072, 400], [1073, 403], [1073, 407], [1073, 410], [1073, 414],
 [1073, 417], [1073, 420], [1072, 423], [1072, 427], [1072, 431],
 [1072, 434], [1070, 434], [1068, 433], [1064, 432], [1059, 433],
 [1053, 431], [1050, 431], [1044, 433], [1041, 433], [1038, 433],
 [1034, 432], [1027, 431], [1024, 430], [1020, 429], [1017, 429],
 [1013, 430], [1009, 430], [1005, 430], [1000, 431], [996, 431],
 [990, 432], [983, 432], [979, 431], [975, 431], [970, 432],
 [964, 431], [960, 431], [956, 431], [953, 430], [949, 430],
 [946, 429], [940, 429], [936, 430], [932, 431], [927, 431],
 [918, 431], [912, 431], [909, 429], [901, 430], [890, 431],
 [885, 431], [882, 431], [879, 433], [877, 438], [877, 442],
 [878, 445], [878, 449], [879, 452], [880, 455], [880, 458],
 [899, 429], [903, 429], [911, 430], [916, 430], [920, 430],
 [930, 431], [880, 429], [880, 426], [880, 421], [879, 418],
 [881, 414], [883, 411], [885, 407], [885, 404], [889, 314],
 [888, 318], [888, 321], [888, 325], [889, 328], [889, 331],
 [889, 335], [889, 339], [888, 342], [888, 345], [888, 348],
 [888, 352], [888, 356], [887, 359], [886, 362], [886, 365],
 [885, 368], [885, 372], [886, 375], [887, 379], [886, 382],
 [885, 385], [885, 388], [884, 390], [884, 393], [884, 396],
 [884, 399], [884, 402], [1011, 374], [1004, 374], [999, 375],
 [994, 376], [990, 376], [987, 376], [984, 375], [981, 375],
 [976, 374], [973, 374], [969, 374], [966, 375], [960, 373],
 [955, 373], [952, 373], [948, 372], [945, 372], [942, 373],
 [937, 374], [933, 374], [929, 373], [926, 371], [922, 371],
 [919, 371], [916, 372], [913, 372], [910, 371], [906, 371],
 [903, 370], [899, 370], [896, 371], [893, 371], [889, 371],
 [883, 372], [878, 371], [873, 370], [870, 371], [866, 371],
 [861, 370], [857, 370], [855, 370], [852, 370], [848, 369],
 [844, 369], [841, 369], [837, 369], [831, 369], [828, 369],
 [824, 370], [821, 370], [817, 373], [817, 376], [817, 379],
 [818, 382], [818, 386], [819, 389], [819, 393], [818, 396],
 [817, 400], [817, 403], [817, 406], [817, 409], [816, 412],
 [816, 417], [817, 419], [817, 422], [817, 425], [817, 427],
 [819, 430], [822, 430], [825, 429], [829, 429], [832, 428],
 [839, 428], [843, 429], [846, 429], [849, 429], [852, 428],
 [856, 428], [859, 428], [863, 428], [869, 430], [872, 430],
 [875, 430], [879, 430], [881, 399], [878, 399], [874, 399],
 [871, 400], [867, 400], [863, 400], [859, 400], [855, 399],
 [852, 399], [848, 399], [844, 399], [840, 399], [837, 400],
 [832, 402], [825, 402], [822, 401], [819, 400], [816, 400],
 [818, 428], [808, 427], [805, 426], [800, 426], [795, 426],
 [792, 427], [785, 428], [781, 428], [778, 427], [772, 427],
 [765, 427], [759, 426], [755, 426], [751, 426], [746, 427],
 [743, 428], [739, 428], [735, 427], [732, 425], [727, 423],
 [723, 423], [720, 424], [715, 425], [709, 426], [704, 426],
 [700, 426], [695, 426], [690, 426], [687, 425], [684, 425],
 [680, 424], [674, 424], [668, 425], [664, 426], [660, 426],
 [656, 426], [652, 426], [643, 426], [636, 426], [633, 426],
 [630, 427], [627, 430], [627, 432], [629, 435], [630, 439],
 [631, 442], [631, 445], [631, 448], [630, 452], [631, 456],
 [631, 459], [631, 462], [630, 465], [630, 468], [631, 471],
 [630, 476], [693, 428], [695, 432], [696, 436], [695, 439],
 [694, 442], [693, 446], [693, 449], [694, 453], [694, 457],
 [694, 459], [694, 463], [694, 467], [694, 471], [694, 474],
 [693, 478], [692, 481], [691, 484], [691, 487], [691, 491],
 [691, 494], [692, 497], [691, 499], [687, 498], [684, 497],
 [679, 497], [674, 498], [668, 499], [664, 499], [661, 499],
 [657, 499], [654, 499], [650, 499], [647, 498], [643, 498],
 [640, 498], [636, 498], [633, 499], [630, 498], [628, 494],
 [628, 490], [628, 487], [628, 484], [629, 480], [630, 477],
 [755, 429], [754, 433], [755, 434], [756, 439], [756, 442],
 [755, 445], [755, 449], [757, 454], [757, 459], [757, 463],
 [756, 468], [756, 473], [756, 477], [756, 481], [755, 484],
 [756, 488], [755, 491], [755, 494], [756, 497], [756, 501],
 [750, 502], [746, 502], [743, 501], [740, 501], [736, 500],
 [733, 500], [730, 500], [726, 501], [723, 501], [720, 500],
 [716, 499], [713, 499], [710, 499], [706, 499], [704, 499],
 [700, 499], [697, 499], [694, 499], [755, 307], [755, 311],
 [755, 315], [755, 318], [755, 321], [755, 324], [754, 327],
 [754, 332], [756, 336], [757, 340], [757, 344], [757, 348],
 [756, 352], [756, 355], [756, 358], [756, 362], [755, 366],
 [754, 369], [754, 372], [754, 376], [755, 379], [756, 383],
 [756, 386], [755, 390], [755, 394], [755, 397], [755, 401],
 [756, 404], [755, 407], [755, 411], [755, 415], [757, 419],
 [758, 422], [759, 425], [820, 369], [816, 368], [812, 368],
 [809, 368], [806, 368], [802, 369], [798, 370], [795, 370],
 [791, 370], [788, 369], [784, 369], [777, 369], [767, 370],
 [764, 369], [761, 368], [757, 368], [754, 367], [750, 367],
 [747, 367], [743, 367], [739, 367], [735, 368], [733, 367],
 [729, 367], [725, 367], [722, 367], [718, 368], [715, 368],
 [711, 368], [707, 367], [703, 367], [700, 366], [696, 366],
 [692, 367], [692, 370], [694, 373], [693, 377], [692, 380],
 [692, 384], [692, 387], [691, 390], [691, 393], [692, 396],
 [693, 400], [693, 403], [694, 406], [693, 409], [692, 413],
 [691, 416], [691, 418], [691, 421], [692, 424], [770, 369],
 [774, 371], [777, 371], [781, 371], [784, 370], [682, 308],
 [685, 312], [687, 315], [689, 318], [690, 321], [690, 324],
 [691, 328], [690, 332], [691, 335], [693, 339], [693, 342],
 [694, 345], [694, 348], [694, 351], [694, 354], [694, 357],
 [694, 360], [694, 364], [688, 365], [684, 365], [681, 365],
 [677, 366], [674, 366], [671, 367], [667, 366], [664, 366],
 [659, 367], [656, 365], [653, 363], [649, 362], [646, 361],
 [642, 360], [639, 359], [635, 358], [632, 358], [628, 358],
 [628, 309], [629, 313], [630, 317], [630, 320], [631, 323],
 [632, 326], [631, 329], [630, 333], [630, 336], [631, 340],
 [632, 343], [631, 346], [631, 349], [631, 352], [630, 354],
 [502, 307], [504, 308], [507, 309], [511, 312], [514, 313],
 [518, 314], [521, 315], [525, 317], [528, 319], [531, 320],
 [535, 321], [538, 323], [542, 325], [544, 326], [547, 328],
 [550, 330], [553, 331], [556, 333], [560, 335], [564, 338],
 [567, 340], [571, 341], [574, 342], [577, 343], [580, 344],
 [584, 346], [588, 349], [591, 350], [595, 349], [598, 349],
 [602, 350], [605, 352], [609, 354], [613, 356], [616, 357],
 [620, 357], [623, 358], [626, 359], [565, 306], [565, 310],
 [565, 312], [565, 316], [565, 319], [565, 322], [565, 325],
 [566, 328], [566, 332], [568, 335], [570, 339], [569, 342],
 [568, 346], [567, 350], [565, 354], [565, 357], [564, 360],
 [565, 363], [566, 366], [566, 370], [567, 374], [567, 377],
 [566, 381], [565, 384], [564, 388], [564, 391], [564, 395],
 [564, 398], [564, 400], [564, 404], [565, 413], [566, 417],
 [565, 419], [565, 423], [565, 426], [565, 429], [565, 432],
 [565, 436], [565, 439], [565, 442], [564, 445], [564, 449],
 [564, 452], [565, 455], [565, 459], [563, 463], [562, 466],
 [562, 469], [563, 473], [562, 476], [559, 479], [557, 481],
 [553, 484], [550, 487], [546, 489], [543, 492], [539, 495],
 [535, 498], [532, 501], [528, 504], [564, 408], [564, 410],
 [569, 423], [572, 423], [576, 424], [579, 425], [583, 425],
 [586, 425], [589, 425], [593, 424], [596, 424], [600, 423],
 [603, 423], [606, 424], [609, 426], [612, 427], [616, 427],
 [619, 426], [622, 426], [625, 425], [642, 426], [644, 425],
 [650, 425], [526, 503], [523, 507], [519, 511], [516, 514],
 [512, 518], [508, 521], [505, 524], [502, 527], [498, 530],
 [494, 534], [490, 537], [487, 539], [483, 543], [480, 546],
 [477, 549], [473, 552], [470, 554], [466, 557], [464, 559],
 [460, 562], [455, 566], [451, 570], [447, 572], [444, 574],
 [441, 575], [438, 575], [434, 576], [431, 578], [427, 579],
 [423, 581], [419, 584], [415, 587], [412, 587], [408, 588],
 [405, 589], [399, 591], [395, 591], [391, 590], [386, 590],
 [383, 590], [380, 588], [376, 581], [375, 571], [378, 567],
 [379, 562], [376, 555], [376, 550], [376, 546], [377, 541],
 [379, 538], [377, 525], [377, 515], [376, 512], [376, 506],
 [375, 497], [375, 490], [376, 486], [377, 482], [375, 478],
 [375, 474], [376, 469], [377, 466], [377, 462], [377, 458],
 [377, 451], [375, 447], [375, 444], [375, 440], [376, 436],
 [376, 432], [376, 428], [373, 423], [373, 417], [375, 413],
 [376, 409], [376, 403], [376, 398], [376, 394], [375, 390],
 [376, 381], [377, 375], [376, 372], [376, 368], [376, 364],
 [380, 361], [377, 359], [377, 356], [376, 351], [375, 347],
 [375, 343], [378, 335], [379, 328], [379, 325], [377, 320],
 [376, 317], [376, 311], [377, 307], [450, 211], [447, 212],
 [444, 213], [440, 213], [436, 213], [431, 213], [428, 212],
 [327, 300], [330, 300], [334, 301], [337, 302], [340, 301],
 [344, 301], [346, 301], [350, 301], [353, 302], [356, 303],
 [360, 303], [364, 303], [367, 304], [372, 304], [376, 304],
 [379, 304], [383, 304], [385, 304], [388, 303], [391, 303],
 [395, 303], [399, 304], [403, 305], [406, 305], [410, 305],
 [413, 305], [416, 307], [421, 307], [424, 308], [428, 308],
 [431, 307], [435, 307], [438, 307], [442, 307], [445, 306],
 [450, 306], [454, 305], [458, 305], [465, 307], [470, 307],
 [473, 308], [477, 307], [483, 307], [489, 306], [492, 305],
 [499, 306], [328, 265], [332, 265], [335, 265], [339, 264],
 [342, 264], [346, 264], [352, 267], [356, 268], [361, 267],
 [365, 268], [368, 270], [372, 271], [376, 273], [381, 275],
 [385, 276], [388, 277], [391, 277], [393, 278], [395, 279],
 [398, 281], [402, 283], [405, 286], [407, 288], [410, 291],
 [412, 293], [416, 294], [419, 294], [423, 294], [426, 294],
 [429, 296], [432, 297], [437, 298], [440, 298], [443, 298],
 [447, 298], [450, 298], [454, 298], [457, 298], [460, 300],
 [463, 301], [467, 302], [471, 303], [474, 303], [478, 304],
 [481, 304], [517, 217], [518, 221], [519, 223], [519, 226],
 [521, 229], [521, 231], [522, 234], [522, 237], [522, 242],
 [522, 245], [523, 249], [523, 253], [522, 257], [521, 260],
 [521, 263], [522, 267], [522, 270], [523, 274], [523, 277],
 [523, 281], [524, 285], [525, 288], [525, 292], [523, 295],
 [522, 298], [522, 302], [521, 305], [509, 299], [508, 296],
 [509, 293], [509, 289], [507, 285], [507, 281], [508, 276],
 [510, 272], [509, 269], [508, 264], [509, 260], [510, 257],
 [511, 253], [513, 249], [513, 244], [512, 241], [511, 238],
 [511, 235], [511, 231], [510, 227], [510, 224], [510, 220],
 [511, 217], [704, 306], [710, 306], [714, 307], [721, 307],
 [726, 307], [732, 306], [738, 306], [743, 306], [749, 306],
 [754, 306], [759, 306], [764, 306], [769, 306], [774, 306],
 [778, 307], [783, 308], [787, 308], [792, 308], [797, 308],
 [802, 308], [806, 308], [811, 308], [817, 308], [822, 308],
 [826, 308], [831, 308], [836, 308], [842, 308], [847, 309],
 [850, 309], [855, 310], [860, 310], [865, 310], [870, 310],
 [873, 310], [878, 311], [883, 311], [889, 310], [892, 175],
 [893, 179], [893, 184], [893, 188], [894, 192], [893, 198],
 [892, 201], [891, 206], [891, 211], [891, 215], [891, 219],
 [892, 225], [893, 230], [892, 236], [892, 240], [891, 246],
 [892, 252], [891, 258], [891, 262], [891, 265], [890, 271],
 [890, 275], [890, 281], [891, 286], [891, 290], [890, 296],
 [890, 300], [891, 304], [676, 219], [675, 222], [675, 226],
 [673, 231], [674, 235], [674, 240], [673, 244], [672, 249],
 [674, 254], [674, 259], [674, 263], [674, 267], [674, 271],
 [674, 275], [674, 279], [674, 283], [675, 288], [674, 293],
 [675, 296], [676, 299], [679, 304], [682, 306], [679, 257],
 [682, 256], [688, 256], [691, 256], [696, 257], [700, 257],
 [704, 257], [707, 258], [712, 258], [717, 259], [723, 259],
 [727, 259], [730, 262], [733, 266], [736, 268], [739, 271],
 [744, 274], [746, 277], [748, 279], [751, 280], [754, 281],
 [759, 282], [763, 282], [766, 281], [772, 277], [777, 276],
 [780, 276], [784, 276], [790, 276], [795, 277], [799, 278],
 [804, 278], [807, 278], [782, 272], [782, 267], [784, 265],
 [788, 262], [792, 259], [795, 256], [796, 251], [795, 248],
 [792, 245], [789, 242], [880, 461], [881, 465], [879, 470],
 [880, 476], [880, 482], [879, 487], [880, 493], [881, 499],
 [882, 505], [880, 511], [878, 519], [878, 525], [879, 529],
 [881, 535], [880, 542], [877, 549], [875, 555], [875, 562],
 [874, 569], [874, 575], [874, 579], [875, 585], [875, 591],
 [876, 596], [563, 479], [566, 484], [567, 491], [567, 496],
 [567, 502], [567, 507], [566, 513], [566, 519], [567, 523],
 [567, 530], [566, 537], [566, 542], [567, 549], [567, 553],
 [567, 559], [567, 564], [566, 571], [566, 575], [566, 579],
 [566, 583], [568, 588], [568, 594], [324, 264], [319, 264],
 [314, 264], [305, 263], [299, 264], [293, 264], [288, 264],
 [285, 264], [279, 265], [274, 265], [269, 266], [263, 267],
 [259, 266], [254, 265], [249, 265], [245, 266], [239, 267],
 [234, 267], [229, 268], [225, 269], [219, 268], [214, 266],
 [209, 266], [204, 267], [199, 268], [194, 269], [189, 269],
 [184, 269], [180, 269], [174, 271], [169, 271], [164, 273],
 [159, 274], [154, 274], [149, 275], [143, 275], [138, 275],
 [133, 276], [128, 278], [122, 280], [116, 280], [112, 280],
 [107, 280], [102, 281], [96, 284], [90, 285], [77, 284],
 [71, 284], [66, 287], [61, 290], [56, 290], [50, 293],
 [84, 284], [86, 285], [39, 293], [36, 293], [31, 293],
 [25, 294], [21, 295], [17, 296], [12, 298], [7, 300],
 [44, 292], [48, 293], [323, 301], [319, 302], [313, 303],
 [309, 303], [304, 303], [298, 299], [293, 299], [289, 299],
 [283, 301], [277, 303], [271, 303], [265, 302], [259, 302],
 [254, 303], [249, 304], [244, 304], [239, 305], [235, 307],
 [230, 309], [219, 271], [219, 275], [220, 279], [221, 283],
 [223, 287], [226, 292], [227, 294], [228, 299], [228, 304],
 [228, 308], [331, 209],
 ];

let path = [];

const locations = [
    [235, 85], // Dejope
    [456, 476], // Camp Randal
    [600, 389], // Union South
    [737, 339], // Chemistry Building
    [743, 205], // Bascom Hall
    [1038, 510], // Kohl Center
    [13, 215], // UW Hospital
    [862, 131], // Memorial Union
];

var bspline = function(t) {
    return [
        (1./6.)*(-t*t*t+3*t*t-3*t+1),
        (1./6.)*(3*t*t*t-6*t*t+4),
        (1./6.)*(-3*t*t*t+3*t*t+3*t+1),
        (1./6.)*t*t*t
    ];
}

var d_bspline = function(t) {
    return [
        (1./6.)*(-3*t*t+6*t-3),
        (1./6.)*(9*t*t-12*t),
        (1./6.)*(-9*t*t+6*t+3),
        (1./6.)*3*t*t
    ];
}


function draw_multi_bspline(points) {
    for(let i = 0; i < points.length - 3; i++) {
        let p = [points[i], points[i + 1], points[i + 2], points[i + 3]];
        let fn = function(t) {
            return cubic(bspline, p, t);
        }
        draw_curve(fn);
    }
}

function cubic(basis,P,t){
    var b = basis(t);
    var result=vec2.create();
    vec2.scale(result,P[0],b[0]);
    vec2.scaleAndAdd(result,result,P[1],b[1]);
    vec2.scaleAndAdd(result,result,P[2],b[2]);
    vec2.scaleAndAdd(result,result,P[3],b[3]);
    return result;
}

function draw_curve(fn, num_intervals = 5) {
    context.beginPath();
    let xy = fn(0);
    moveTo(xy[0], xy[1]);
    for(let i = 1; i <= num_intervals; i++) {
        let xy = fn(i / num_intervals);
        lineTo(xy[0], xy[1]);
    }
    context.stroke();
}

/* ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ Path-Finding ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ */

function pt_dist(p1, p2) {
    let dx = p1[0] - p2[0];
    let dy = p1[1] - p2[1];
    return Math.sqrt(dx * dx + dy * dy);
}

function get_cnx(thresh) {
    let result = Array(pts.length);
    for(let i = 0; i < pts.length; i++) result[i] = Array();

    for(let i = 0; i < pts.length; i++) {
        for(let j = 0; j < pts.length; j++) {
            if(i == j) continue;
            if(pt_dist(pts[i], pts[j]) > thresh) continue;
            result[i].push(j);
        }
    }

    return result;
}

function bfs(from, to, thresh) {
    // find closest point to `from' and `to'
    let closest_from = 0, closest_to = 0;
    for(let i = 1; i < pts.length; i++) {
        if(pt_dist(from, pts[i]) < pt_dist(from, pts[closest_from])) closest_from = i;
        if(pt_dist(to, pts[i]) < pt_dist(to, pts[closest_to])) closest_to = i;
    }

    let cnx = get_cnx(thresh);
    let p = Array(pts.length);
    let q = [closest_from];
    let vis = {};
    vis[closest_from] = true;

    while(q.length) {
        let curr = q.shift();

        if(curr == closest_to) {
            let result = [to];

            while(curr != undefined) {
                result.unshift(pts[curr]);
                curr = p[curr];
            }

            result.unshift(from);

            return result;
        }

        let x = pts[curr][0];
        let y = pts[curr][1];
        if(!cnx[curr]) continue;
        for(let i = 0; i < cnx[curr].length; i++) {
            let neigh = cnx[curr][i];

            if(vis[neigh]) continue;
            vis[neigh] = true;
            p[neigh] = curr;
            q.push(neigh);
        }
    }

    return null;
}

/* ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ Runtime ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ */

const to = document.querySelector("#to");
const from = document.querySelector("#from");
const status = document.querySelector("#status");
const ot = document.querySelector("#ot");
const ns = document.querySelector("#ns");
const fo = document.querySelector("#fo");
ot.value = 25;
to.value = 1;

function go() {
    if(to.value == from.value) {
        status.innerHTML = "You're already there";
        return;
    }

    path = bfs(locations[Number(from.value)], locations[Number(to.value)], Number(ot.value));
    if(path == null) {
        status.innerHTML = "Can't find a path (try increasing offroad tolerance";
        path = [];
        return;
    }

    status.innerHTML = "";
}

/*
let ct = 0;

function mouse(e) {
    ct += 1;
    ct %= 10;
    if(ct != 0) return;

    if(e.altKey) pts.push([e.offsetX, e.offsetY]);
    else if(e.shiftKey) pts.pop();
    update();
}

function prettyPrintPts() {
    console.log("[");
    for(let i = 0; i < pts.length; i += 5) {
        let s = ""
        for(let j = i; j < pts.length && j < i + 5; j++) {
            s += `[${pts[j][0]}, ${pts[j][1]}],`
            if(j != pts.length - 1 && j != i + 4) s += " ";
        }
        console.log(s);
    }
    console.log("]");
}

canvas.addEventListener("mousemove", mouse);
*/
